#!/bin/bash
source ./0SOURCE
cd ${run_DIR}

##----------------
for i in ${SAMPLE} 
do
echo "
#!/bin/bash
#PBS -m abe
#PBS -l nodes=1:ppn=${PPN},vmem=${VMEM}gb,walltime=${WALLTIME}:00:00
#PBS -M ${EMAIL}
#PBS -N gatk_${i}-on-${REFSEQNAME}
#PBS -j oe

module add bowtie2/2.2.3
module add bwa/0.7.6a
module add python
module add java
module add samtools/0.1.19
module add picard/1.52
module add gatk/3.4-0

cd ${run_DIR}

#1. Align the paired reads to reference genome using bwa mem.
bwa mem -M -t 8 \
${prereq_DIR}/${REFSEQ} ${prereq_DIR}/${i}_1.fq ${prereq_DIR}/${i}_2.fq > ${i}.sam

#2. Sort SAM file and output as BAM file
java -Xmx${JAVA_XMX} -jar ${PICARD_DIR}/SortSam.jar \
INPUT=${i}.sam \
OUTPUT=${i}.sorted.bam \
SORT_ORDER=coordinate \
VALIDATION_STRINGENCY=LENIENT \
CREATE_INDEX=TRUE

#3. Fix mate using samtools fixmate, followed with sorting and indexing
# Fix mate with Picard/FixMateInformation.jar is causing errors for downstream steps, so use fixmate from samtools instead.
${SAMTOOLS_DIR}/samtools fixmate ${i}.sorted.bam ${i}.fxmt.bam
java -Xmx${JAVA_XMX} -jar ${PICARD_DIR}/SortSam.jar \
INPUT=${i}.fxmt.bam \
OUTPUT=${i}.fxmt.sorted.bam \
SORT_ORDER=coordinate \
VALIDATION_STRINGENCY=LENIENT \
CREATE_INDEX=TRUE

#4. Mark duplicate reads
java -Xmx${JAVA_XMX} -jar ${PICARD_DIR}/MarkDuplicates.jar \
INPUT=${i}.fxmt.sorted.bam \
OUTPUT=${i}.mkdup.bam \
METRICS_FILE=${i}.metrics \
VALIDATION_STRINGENCY=LENIENT \
CREATE_INDEX=TRUE \
MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000

#5. Add or replace read groups
java -Xmx${JAVA_XMX} -jar ${PICARD_DIR}/AddOrReplaceReadGroups.jar \
INPUT=${i}.mkdup.bam \
OUTPUT=${i}.addrep.bam \
RGID=${i} \
RGPU=${i} \
RGLB=${i} \
RGPL=Illumina \
RGSM=${i} \
RGCN=BGI \
SORT_ORDER=coordinate \
VALIDATION_STRINGENCY=LENIENT \
CREATE_INDEX=TRUE

#6. Realign Target using GenomeAnalysisTK (GATK)
java -Xmx${JAVA_XMX} -jar ${GATK_DIR}/GenomeAnalysisTK.jar \
-T RealignerTargetCreator \
-I ${i}.addrep.bam \
-R ${prereq_DIR}/${REFSEQ} \
-o ${i}.intervals \
-nt 8
# Note: turn on option "-fixMisencodedQuals" when encounter error message of "SAM/BAM/CRAM file xxxxx appears to be using the wrong encoding for quality scores".

#7. Indel Realigner
java -Xmx${JAVA_XMX} -jar ${GATK_DIR}/GenomeAnalysisTK.jar \
-T IndelRealigner \
-I ${i}.addrep.bam \
-R ${prereq_DIR}/${REFSEQ} \
-targetIntervals ${i}.intervals \
-o ${i}.realn.bam
# Note: turn on option "-fixMisencodedQuals" when encounter error message of "SAM/BAM/CRAM file xxxxx appears to be using the wrong encoding for quality scores".

#8. Merge individual BAM files if there are multiple read pairs per sample
# ${SAMTOOLS_DIR}/samtools merge ${i}.merged.bam ${i}.*.realn.bam
# \cp ${i}.merged.bam ${i}.realn.bam

#9. Call variants using Unified Genotyper
java -Xmx${JAVA_XMX} -jar ${GATK_DIR}/GenomeAnalysisTK.jar \
-T UnifiedGenotyper \
-R ${prereq_DIR}/${REFSEQ} \
-I ${i}.realn.bam \
-o ${i}.vcf \
-glm BOTH \
--genotyping_mode DISCOVERY \
-out_mode EMIT_ALL_SITES \
--sample_ploidy 2 \
--min_base_quality_score 20 \

# The following three options for step #9 are commented out to be compatible with the SNP-Seek database.
# --standard_min_confidence_threshold_for_emitting 10 \
# --standard_min_confidence_threshold_for_calling 50 \
# --min_indel_count_for_genotyping 2

#10. Select Variants by SNPS and Indels using SelectVariants
java -Xmx${JAVA_XMX} -jar ${GATK_DIR}/GenomeAnalysisTK.jar \
-T SelectVariants \
-R ${prereq_DIR}/${REFSEQ} \
--variant ${i}.vcf \
--excludeFiltered \
--excludeNonVariants \
-o ${i}_env.vcf

java -Xmx${JAVA_XMX} -jar ${GATK_DIR}/GenomeAnalysisTK.jar \
-T SelectVariants \
-R ${prereq_DIR}/${REFSEQ} \
--selectTypeToInclude SNP \
--variant ${i}_env.vcf \
-o ${i}_env_snp.vcf

java -Xmx${JAVA_XMX} -jar ${GATK_DIR}/GenomeAnalysisTK.jar \
-T SelectVariants \
-R ${prereq_DIR}/${REFSEQ} \
--selectTypeToInclude INDEL \
--minIndelSize 5 \
--variant ${i}_env.vcf \
-o ${i}_env_indel.vcf

" > gatk_${i}-on-${REFSEQNAME}.qsub

done

